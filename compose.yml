services:
  frontend:
    build:
      context: ./frontend
      dockerfile: ./docker/Dockerfile.frontend
    ports:
      - "${FRONTEND_PORT:-8000}:80"
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: ./docker/Dockerfile.backend
    ports:
      - "${BACKEND_PORT:-3000}:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:postgres@db:5432/app_db}
    command: "sh /usr/src/app/entrypoint.sh"
    volumes:
      - ./backend:/usr/src/app
    depends_on:
      - db

  db:
    image: postgres:16-alpine
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-app_db}
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./backend/db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-app_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
